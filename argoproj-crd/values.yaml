# Default values for example.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

project:
  # Unique project name in Argo CD.
  name: my-project

  # Project description.
  description: my project

  # ClusterResourceWhitelist contains list of whitelisted cluster level resources
  clusterResourceWhitelist: []
  # ex) Deny all cluster-scoped resources from being created, except for Namespace.
  # - group: ''
  #   kind: Namespace


  # NamespaceResourceBlacklist contains list of blacklisted namespace level resources
  # namespaceResourceBlacklist: []

  # Allow all namespaced-scoped resources to be created, except for ResourceQuota, LimitRange, NetworkPolicy.
  # namespaceResourceWhitelist: []
  # ex) NamespaceResourceWhitelist contains list of whitelisted namespace level resources
  # - group: ''
  #   kind: ResourceQuota
  # - group: ''
  #   kind: LimitRange
  # - group: ''
  #   kind: NetworkPolicy

  # OrphanedResources specifies if controller should monitor orphaned resources of apps in this project
  # orphanedResources: {}

  # Roles are user defined RBAC roles associated with this project
  # roles: []
  # ex) A role which provides read-only access to all applications in the project
  # - name: read-only
  #   description: Read-only privileges to my-project
  #   policies:
  #   - p, proj:my-project:read-only, applications, get, my-project/*, allow
  #   groups:
  #   - my-oidc-group
  # A role which provides sync privileges to only the guestbook-dev application, e.g. to provide
  # ex) sync privileges to a CI system
  # - name: ci-role
  #   description: Sync privileges for guestbook-dev
  #   policies:
  #   - p, proj:my-project:ci-role, applications, sync, my-project/guestbook-dev, allow
  #
  #   # NOTE: JWT tokens can only be generated by the API server and the token is not persisted
  #   # anywhere by Argo CD. It can be prematurely revoked by removing the entry from this list.
  #   jwtTokens:
  #   - iat: 1535390316

  # SyncWindows controls when syncs can be run for apps in this project
  # syncWindows: []
  # ex) allow '*-prod" application to sync in window time
  #- kind: allow
  #  schedule: '10 1 * * *'
  #  duration: 1h
  #  applications:
  #  - '*-prod'
  #  manualSync: true
  # ex) deny namespace "default" to sync in window time
  #- kind: deny
  #  schedule: '0 22 * * *'
  #  duration: 1h
  #  namespaces:
  #  - default
  # ex) allow target cluster(in-cluster, cluster1) to sync in window time
  # - kind: allow
  #   schedule: '0 23 * * *'
  #   duration: 1h
  #   clusters:
  #   - in-cluster
  #   - cluster1

# Application related to project.
applications: []
# -
  # Application name in Argo CD.
  # name: guestbook

  # Repository URL to be the source of the application.
  # repoURL: https://github.com/argoproj/argocd-example-apps.git

  # HEAD/branch/tag/commit hash.
  # https://argoproj.github.io/argo-cd/user-guide/tracking_strategies/
  # targetRevision: HEAD

  # Path from the root of the repository that will be the source of the application.
  # path: guestbook

  # helm specific config.
  # helm:
  #   valueFiles:
  #   - values-prod.yaml

  # kustomize specific config.
  # kustomize:
  #   namePrefix: prod-

  # directory.
  # directory:
  #   recurse: true
  #   jsonnet:
  #     # A list of Jsonnet External Variables
  #     extVars:
  #     - name: foo
  #       value: bar
  #       # You can use "code to determine if the value is either string (false, the default) or Jsonnet code (if code is true).
  #     - code: true
  #       name: baz
  #       value: "true"
  #     # A list of Jsonnet Top-level Arguments
  #     tlas:
  #       - code: false
  #         name: foo
  #         value: bar

  # plugin specific config.
  # plugin:
  #  name: helmfile

  # Destination cluster to deploy the application.
  # server: https://kubernetes.default.svc

  # Destination namespace to deploy the application.
  # namespace: guestbook
  #   or
  # namespace:
  #   metadata:
  #     name: guestbook
  #     annotations:
  #       iam.amazonaws.com/permitted: ".*"

  # Sync policy.
  # syncPolicy:
  #  automated:
  #    prune: false
  #    selfHeal: false

  # Ignore differences at the specified json pointers.
  # ignoreDifferences:
  # - group: apps
  #   kind: Deployment
  #   jsonPointers:
  #   - /spec/replicas
