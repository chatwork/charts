{{ $root := . }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "twistlock-defender.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "twistlock-defender.labels" . | nindent 4 }}
    {{- range $k, $v := .Values.labels }}
    {{ $k }}: {{ $v | quote }}
    {{- end }}
  annotations:
    {{- range $k, $v := .Values.annotations }}
    {{ $k }}: {{ $v | quote }}
    {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "twistlock-defender.selectorLabels" . | nindent 6 }}
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "twistlock-defender.selectorLabels" . | nindent 8 }}
        {{- range $k, $v := .Values.podLabels }}
        {{ $k }}: {{ $v | quote }}
        {{- end }}
      annotations:
        checksum/config: "{{ tpl (toYaml .Values.config) . | sha256sum }}"
        checksum/secret: "{{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}"
        {{- range $k, $v := .Values.podAnnotations }}
        {{ $k }}: {{ $v | quote }}
        {{- end }}
      name: {{ template "twistlock-defender.fullname" $root }}
    spec:
      {{- if or .Values.config.monitor.istio .Values.config.monitor.serviceAccounts }}
      serviceAccountName: {{ include "twistlock-defender.serviceAccountName" . }}
      {{- end }}
      imagePullSecrets:
        {{- toYaml .Values.image.imagePullSecrets | nindent 8 }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      containers:
      - name: twistlock-defender
        image: {{ tpl .Values.image.repository $root }}:{{ tpl .Values.image.tag $root }}
        {{- if .Values.service.enabled }}
        ports:
        - name: https
          containerPort: {{ .Values.port.https.containerPort }}
          protocol: TCP
        {{- end }}
        env:
        - name: WS_ADDRESS
          value: "{{ tpl .Values.config.console.wsAddress $root }}"
        - name: DEFENDER_TYPE
          value: {{ .Values.config.defender.type }}
        - name: DEFENDER_LISTENER_TYPE
          value: "{{ .Values.config.defender.listenerType }}"
        - name: LOG_PROD
          value: "true"
        - name: SYSTEMD_ENABLED
          value: "false"
        - name: DOCKER_CLIENT_ADDRESS
          value: "{{ .Values.config.docker.clientAddress }}"
        - name: DEFENDER_CLUSTER_ID
          value: "{{ .Values.config.clusterId }}"
        - name: DEFENDER_CLUSTER
          value: "{{ .Values.config.cluster }}"
        - name: MONITOR_SERVICE_ACCOUNTS
          value: "{{ .Values.config.monitor.serviceAccounts }}"
        - name: MONITOR_ISTIO
          value: "{{ .Values.config.monitor.istio }}"
        - name: COLLECT_POD_LABELS
          value: "{{ .Values.config.collectPodLabels }}"
        - name: INSTALL_BUNDLE
          value: "{{ .Values.config.installBundle }}"
        - name: CLOUD_HOSTNAME_ENABLED
          value: "{{ .Values.config.cloudHostnameEnabled }}"
        - name: HOST_CUSTOM_COMPLIANCE_ENABLED
          value: "{{ .Values.config.hostCustomCompliance }}"
        {{- with .Values.extraEnv }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.livenessProbe }}
        livenessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.readinessProbe }}
        readinessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: data-path
          mountPath: "{{ .Values.volumeMounts.dataPath }}"
        - name: certificates
          mountPath: "{{ .Values.volumeMounts.certificates }}"
        - name: docker-sock-path
          mountPath: "{{ .Values.volumeMounts.docker.sockPath }}"
        - name: passwd
          mountPath: "/etc/passwd"
          readOnly: true
        - name: syslog-socket
          mountPath: "/dev/log"
        {{- if eq .Values.config.defender.type "cri" }}
        - name: {{ .Values.config.cri.dataVolumeName }}
          mountPath: "/var/lib/containers"
        {{- end }}
        {{- with .Values.extraVolumeMounts }}{{ toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      volumes:
      - name: data-path
        hostPath:
          path: "{{ .Values.volumes.dataPath }}"
      - name: certificates
        secret:
          secretName: {{ template "twistlock-defender.fullname" . }}
          defaultMode: 256
      - name: syslog-socket
        hostPath:
          path: "{{ .Values.volumes.syslog }}"
      - name: docker-sock-path
        hostPath:
          path: "{{ .Values.volumes.docker.sockPath }}"
      - name: passwd
        hostPath:
          path: "{{ .Values.volumes.passwd }}"
      {{- if eq .Values.config.defender.type "cri" }}
      - name: {{ .Values.config.cri.dataVolumeName }}
        hostPath:
          path: "/var/lib/containers"
      {{- end }}
      {{- with .Values.extraVolumes }}{{ toYaml . | nindent 6 }}
      {{- end }}
      {{- if .Values.useHostPID }}
      hostPID: true
      {{- end }}
      {{- if .Values.useHostNetwork }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
