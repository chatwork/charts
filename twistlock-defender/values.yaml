fullnameOverride: ""
nameOverride: ""

accessToken: "accessToken"

console:
  dnsName: twistlock-console
  port: 8084

image:
  repository: "registry-auth.twistlock.com/tw_{{ .Values.accessToken }}/twistlock/defender"
  tag: "defender{{ .Values.config.docker.tag }}"
  imagePullPolicy: IfNotPresent
  imagePullSecrets: []

volumeMounts:
  dataPath: "/var/lib/twistlock"
  certificates: "/var/lib/twistlock/certificates"
  docker:
    sockPath: "/var/run"
    netns: "/var/run/docker/netns"
  iptablesFlockPath: "/run"

volumes:
  dataPath: "/var/lib/twistlock/defender"
  docker:
    sockPath: "/var/run"
    netns: "/var/run/docker/netns"
  iptablesFlockPath: "/run"
  passwd: "/etc/passwd"
  auditLog: "/var/log/audit"
  syslog: "/dev/log"

config:
  console:
    wsAddress: wss://{{ .Values.console.dnsName }}:{{ .Values.console.port }}
  defender:
    type: "daemonset"
    listenerType: "none"
  clusterId: "CLUSTERID"
  monitor:
    serviceAccounts: true
    istio: false
  # https://docs.twistlock.com/docs/19.07/install/install_defender/install_rasp_defender.html#embed-rasp-defender-manually
  installBundle: ""
  collectPodLabels: true
  docker:
    clientAddress: "/var/run/docker.sock"
    tag: "_20_09_345"
  hostCustomCompliance: false
  containerizedHost: false
  microsegmentation: false

resources:
  limits:
    cpu: 1000m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

securityContext:
  readOnlyRootFilesystem: true
  privileged: true
  capabilities:
    add:
      - NET_ADMIN  # Required for process monitoring
      - SYS_ADMIN  # Required for filesystem monitoring
      - SYS_PTRACE # Required for local audit monitoring
      - MKNOD # A capability to create special files using mknod(2), used by docker-less registry scanning
      - SETFCAP # A capability to set file capabilities, used by docker-less registry scanning
      ## If you set microsegmentation to true, you need this capabilities
      #- NET_RAW # Required for using raw sockets by UDP datapath and in diagnostic ping implementations
      #- SYS_RESOURCE # Required for setting resource limits (setrlimit syscall)
      #- SYS_MODULE # Required for loading kernel modules
      #- IPC_LOCK # Required for defender to use perf events on systems with insufficient mlock limit, since microsegmentation agent consumes it too. (See https://www.kernel.org/doc/html/latest/admin-guide/perf-security.html#unprivileged-users)

secret:
  ca_cert: "CA_CERT"
  client_cert: "CLIENT_CERT"
  client_key: "CLIENT_KEY"
  service_parameter: "SERVICE_PARAMETER"

useHostNetwork: true
useHostPID: true

annotations: {}
updateStrategy:
  type: RollingUpdate

port:
  https:
    containerPort: 443
    servicePort: 443

service:
  enabled: false

podAnnotations: {}
tolerations: []
extraEnv: []
extraVolumeMounts: []
extraVolumes: []

livenessProbe: {}
readinessProbe: {}

priorityClassName: ""

serviceAccount:
  create: true
  name:
  annotations: {}
