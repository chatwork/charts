# Default values for php.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# GLOBAL
sharedPath: /var/www/html

# DEPLOYMENT
# If you want fix replicaCount, disable autoscaling.enabled and uncomment the following line
#replicaCount: 1

strategy:
  type: RollingUpdate

annotations: {}

labels: {}

podLabels: {}

podAnnotations: {}

imagePullSecrets: []

readinessGates: []

restartPolicy: "Always"

securityContext: {}

terminationGracePeriodSeconds: 70

topologySpreadConstraints: []
#  - maxSkew: 1
#    topologyKey: topology.kubernetes.io/zone
#    whenUnsatisfiable: DoNotSchedule

tolerations: []

affinity: {}

# SERVICE
service:
  annotations: {}
  labels: {}
  type: LoadBalancer
  port: null
  extraPorts: []

# INGRESS
ingress:
  enabled: false
  labels: {}
  annotations: {}
  hosts: []
  # - host: localhost
  #   paths:
  #   - /foo
  #   - /bar
  #   extraPathes:
  #     path: /foo
  #     backend:
  #       serviceName: foo-service
  #       servicePort: 80
  tls: []
  # - hosts:
  #     - example.com
  #       secretName: examplecret-tls
  ingressClassName: ''

# PDB
podDisruptionBudget:
  enabled: false
  annotations: {}
  labels: {}
  minAvailable:
  maxUnavailable:

# HPA
autoscaling:
  enabled: false
  annotations: {}
  labels: {}
  minReplicas:
  maxReplicas:
  metrics: []
  #  - type: Resource
  #    resource:
  #      name: cpu
  #      target:
  #        type: Utilization
  #        averageUtilization: 60
  behavior: {}
  #  scaleDown:
  #    stabilizationWindowSeconds: 300
  #    policies:
  #      - type: Percent
  #        value: 100
  #        periodSeconds: 15
  #  scaleUp:
  #    stabilizationWindowSeconds: 0
  #    policies:
  #      - type: Percent
  #        value: 100
  #        periodSeconds: 15
  #      - type: Pods
  #        value: 4
  #        periodSeconds: 15
  #    selectPolicy: Max

# RBAC
rbac:
  # Specifies whether a role and rolebinding should be created.
  create: true

# PSP
podSecurityPolicy:
  create: false
  annotations: {}
  labels: {}
  name:
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  volumes:
    - '*'

# SA
serviceAccount:
  # Specifies whether a service account should be created.
  create: true
  # Annotations to add to the service account.
  annotations: {}
  labels: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template.
  name:

# PriorityClass name
priorityClassName:

# BUSYBOX
busybox:
  enabled: true
  image:
    repository: busybox
    tag: latest
    pullPolicy: IfNotPresent

  # `busybox.command` is initialize command.
  # Copy the source code in busybox to `sharedPath` or `busybox.sharedPath`.
  # e.g. sh -c "cp -av /path/to/sources/* /path/to/share-path"
  command: ["sh", "-c", "echo '<?php echo \"Hello World\";' > /var/www/html/index.php"]

  # `busybox.sharedPath` is specifies the directory to mount.
  # Default is `sharedPath`, but if it conflicts with the source code directory, please specify it.
  sharedPath:

  # `busybox.extraEnv` is additional environment variables.
  extraEnv: []
  #  KEY1: VALUE1
  #  KEY2: VALUE2
  #  KEY3: VALUE3

  # `busybox.extraEnvFrom` is addtional envFrom.
  # Specify ConfigMap created in `busybox.templates` or Secret created in `busybox.secrets`.
  extraEnvFrom: []
  #- configMapRef:
  #    name: [release-name]-busybox-[template-name]
  #- secretRef:
  #    name: [release-name]-busybox-[template-name]

  # `busybox.extraVolumes` is addition volumes.
  extraVolumes: []
  #- name: extra-volume
  #  configMap:
  #    name: configmap-name

  # `busybox.extraVolumeMounts` is addition volumeMounts.
  # specify the volume name created with `extraVolume`.
  extraVolumeMounts: []
  #- name: your-volume-name
  #  mountPath: /path/to/dir

  # `buxybox.secrets` is additional Secret as a string to be passed to the tpl function.
  # Secret name created here is `[release-name]-busybox-[template-name]`.
  secrets: {}
  #  file1.yaml: |
  #    foo: 1
  #    bar: 2
  #    baz: 3
  #  file2.yaml: |
  #    foo: 1
  #    bar: 2
  #    baz: 3
  #  envname:
  #    FOO: 1
  #    BAR: 2
  #    BAZ: 3

  # If true, ConfigMap will be volume-mounted to the pod automatically.
  enableAutoMountConfigMap: true

  # `buxybox.configMaps` is additional ConfigMap as a string to be passed to the tpl function.
  # ConfigMap name created here is `[release-name]-busybox-[template-name]`.
  configMaps: {}
  #  template-name1.yaml: |
  #    foo: 1
  #    bar: 2
  #    baz: 3
  #  template-name2.yaml: |
  #    foo: 1
  #    bar: 2
  #    baz: 3
  #  template-name3:
  #    FOO: 1
  #    BAR: 2
  #    BAZ: 3

# NGINX
nginx:
  enabled: true
  image:
    repository: nginx
    tag: 1.17-alpine
    pullPolicy: IfNotPresent

  # command for nginx image execution
  command: []

  # NGINX configuration
  # port using as Container port, Service port
  containerPort: 80

  lifecycle: {}
    #postStart:
    #  exec:
    #    command: ["/bin/sh", "-c", "echo Hello > /tmp/message"]
    #preStop:
    #  exec:
    #    command: ["/bin/sh", "-c", "sleep 5; nginx -s quit; sleep 60"]

  livenessProbe: {}

  readinessProbe: {}

  startupProbe: {}

  resources: {}

  # `nginx.extraEnv` is additional environment variables.
  extraEnv: []
  #- name: key1
  #  value: value1
  #- name: HOST_IP
  #  valueFrom:
  #    fieldRef:
  #      fieldPath: status.hostIP

  # `nginx.extraEnvFrom` is addtional envFrom.
  # Specify ConfigMap created in `nginx.templates` or Secret created in `nginx.secrets`.
  extraEnvFrom: []
  #- configMapRef:
  #    name: [release-name]-nginx-[template-name]
  #- secretRef:
  #    name: [release-name]-nginx-[template-name]

  # `nginx.extraPorts` is addtional ports.
  # Please specify if you want to expose a non-default port.
  extraPorts: []
  #- name: extra-port
  #  containerPort: 9999
  #  protocol: TCP

  # `nginx.extraVolumes` is addition volumes.
  extraVolumes: []
  #- name: extra-volume
  #  configMap:
  #    name: configmap-name

  # `nginx.extraVolumeMounts` is addition volumeMounts.
  # specify the volume name created with `extraVolume`.
  extraVolumeMounts: []
  #- name: your-volume-name
  #  mountPath: /path/to/dir

  # `nginx.secrets` is additional Secret as a string to be passed to the tpl function.
  # Secret name created here is `[release-name]-nginx-[template-name]`.
  secrets: {}
  #  file1.yaml: |
  #    foo: 1
  #    bar: 2
  #    baz: 3
  #  file2.yaml: |
  #    foo: 1
  #    bar: 2
  #    baz: 3
  #  envname:
  #    FOO: 1
  #    BAR: 2
  #    BAZ: 3

  # If true, ConfigMap will be volume-mounted to the pod automatically.
  enableAutoMountConfigMap: true

  # configuration NGINX templates.
  # If you can not be satisfied with the default settings you can change the template.
  configMaps:
    nginx.conf: |
      user  nobody;
      worker_processes  auto;

      error_log  /dev/stderr info;
      pid        /var/run/nginx.pid;

      events {
          worker_connections  1024;
      }

      http {
          include       /etc/nginx/mime.types;
          default_type  application/octet-stream;

          log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for"';

          access_log  /dev/stdout  main;

          sendfile        on;

          keepalive_timeout  65;

          include /etc/nginx/conf.d/*.conf;
      }
    conf.d/default.conf: |
      server {
          listen {{ .Values.nginx.containerPort }};

          location / {
              root   {{ .Values.sharedPath }};
              index  index.php index.html index.htm;
          }
          location ~ \.php$ {
              root           {{ .Values.sharedPath }};
              fastcgi_pass   unix:/var/run/php-fpm/php-fpm.sock;
              fastcgi_index  index.php;
              fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
              include        fastcgi_params;
          }
      }

# PHP-FPM
fpm:
  image:
    repository: php
    tag: 7.4-fpm-alpine
    pullPolicy: IfNotPresent

  # custom command for php-fpm image execution
  command: []
  # - php-fpm
  # - -d zend_extension=xdebug.so

  # If containerPort is null, then PHP-FPM works with sock.
  containerPort: null

  lifecycle: {}
    #postStart:
    #  exec:
    #    command: ["/bin/sh", "-c", "echo Hello > /tmp/message"]
    #preStop: {}
    #  exec:
    #    command: ["/bin/sh", "-c", "sleep 5; kill -QUIT 1; sleep 60"]

  livenessProbe: {}
  readinessProbe: {}
  startupProbe: {}
  resources: {}

  # `fpm.extraEnv` is additional environment variables.
  extraEnv: []
  #- name: key1
  #  value: value1
  #- name: HOST_IP
  #  valueFrom:
  #    fieldRef:
  #      fieldPath: status.hostIP

  # `fpm.extraEnvFrom` is addtional envFrom.
  # Specify ConfigMap created in `fpm.templates` or Secret created in `fpm.secrets`.
  extraEnvFrom: []
  #- configMapRef:
  #    name: [release-name]-fpm-[template-name]
  #- secretRef:
  #    name: [release-name]-fpm-[template-name]

  # `fpm.extraPorts` is addtional ports.
  # Please specify if you want to expose a non-default port.
  extraPorts: []
  #- name: extra-port
  #  containerPort: 9999
  #  protocol: TCP

  # `fpm.extraVolumes` is addition volumes.
  extraVolumes: []
  #- name: extra-volume
  #  configMap:
  #    name: configmap-name

  # `fpm.extraVolumeMounts` is addition volumeMounts.
  # specify the volume name created with `extraVolume`.
  extraVolumeMounts: []
  #- name: your-volume-name
  #  mountPath: /path/to/dir

  # `fpm.secrets` is additional Secret as a string to be passed to the tpl function.
  # Secret name created here is `[release-name]-nginx-[template-name]`.
  secrets: {}
  #  file1.yaml: |
  #    foo: 1
  #    bar: 2
  #    baz: 3
  #  file2.yaml: |
  #    foo: 1
  #    bar: 2
  #    baz: 3
  #  envname:
  #    FOO: 1
  #    BAR: 2
  #    BAZ: 3

  # If true, ConfigMap will be volume-mounted to the pod automatically.
  enableAutoMountConfigMap: true

  # configuration PHP-FPM templates
  # If you can not be satisfied with the default settings you can change the template.
  configMaps:
    php-fpm.d/zz-kubernetes.conf: |
      [www]
      {{- if .Values.fpm.containerPort }}
      listen = 127.0.0.1:{{ .Values.fpm.containerPort }}
      {{- else }}
      listen = /var/run/php-fpm/php-fpm.sock
      {{- end }}
      listen.owner = nobody
      listen.group = nogroup
      listen.mode = 0660

      php_admin_value[sys_temp_dir] = /tmp

      php_admin_flag[display_errors] = off
      php_admin_value[error_log] = /proc/self/fd/2
      php_admin_flag[log_errors] = on
      php_admin_value[log_errors_max_len] = 8192

# TEST
test:
  enabled: true
